import random
from datareader import player_stat_ripper
from user_profile import user_profile, opponent_profile

#variables; these will be generated by 
#user_profile
#opponent_profile; imported above

#you can switch these two up for testing
offense = user_profile['name']
defense = opponent_profile['name']

#weighted probabilities
offense_to_take_shot = [float(player_stat_ripper(offense, 'TOV%')), (100 - float(player_stat_ripper(offense, 'TOV%')))]
defense_to_steal = [(100 - float(player_stat_ripper(defense, 'STL%'))), (float(player_stat_ripper(defense, 'STL%')))]   #98.1% v. 1.9% Kevin Durant's likelihood to steal -- 98.1% chance of NOT stealing
defense_to_block = '' #not calculated yet
defense_to_rebound = '' #see above
offense_to_score = '' #see above
offense_to_orebound = '' #see above


print defense_to_steal

#functions

#weighted probability roller
def encounterweights(weights):
    totals = []
    running_total = 0

    for w in weights:
        running_total += w
        totals.append(running_total)

    rnd = random.random() * running_total
    for i, total in enumerate(totals):
        if rnd < total:
            return i
        
##define these functions under class for LONG SHOT ATTEMPT / 3pt shot attempt
def staminacomp(ostamina, dstamina):
    if ostamina > dstamina:
        return user_profile['name']
    else:
        return opponent_profile['name']

def speedcomp(ospeed, dspeed):
    if ospeed > dspeed:
        return user_profile['name']
    else:
        return opponent_profile['name']

#####    
def offfail(defcheck):
    if encounterweights(defcheck) == 0:
        return staminacomp(user_profile['stamina'], opponent_profile['stamina'])
    else:
        return opponent_profile['name']

def offsuccede(offcheck):
    if encounterweights(offcheck) == 0: 
        return user_profile['name']
    else:
        return speedcomp(user_profile['speed'], opponent_profile['speed']) # 

#########  this is going to be for 3PT SHOT; another encounter layer for MID, and another one for CLOSE  
def encounter(offense, defense):
    if encounterweights(offense) == 0: #
        return offfail(defense)
    else:
        return offsuccede(defense) 
 
     
#output; testing percentages the hard way
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
