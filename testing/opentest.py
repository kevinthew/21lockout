import random
from datareader import player_stat_ripper
from player_cards import user_profile, opponent_profile


<<<<<<< HEAD
#you can switch these two up for testing -- these feed into the probabilities listed below
offense_name = user_profile['name']
defense_name = opponent_profile['name']
offense_stamina = user_profile['stamina']
defense_stamina = user_profile['stamina']
offense_speed = user_profile['speed']
defense_speed = user_profile['speed']
#how these are defined needs to change; there has to be an easier way
=======
#you can switch these two up for testing; encounter function returns these below; dependent on user and opponent profiles
offense = user_profile['name']
defense = opponent_profile['name']
>>>>>>> 92d37aa37535db2b87c357280a60244763eb7bd7


print user_profile
print opponent_profile

#weighted probabilities
<<<<<<< HEAD
offense_to_take_shot = [float(player_stat_ripper(offense_name, 'TOV%')), (100 - float(player_stat_ripper(offense_name, 'TOV%')))]
defense_to_steal = [(100 - float(player_stat_ripper(defense_name, 'STL%'))), (float(player_stat_ripper(defense_name, 'STL%')))] 
=======
offense_to_take_shot = [float(player_stat_ripper(offense, 'TOV%')), (100 - float(player_stat_ripper(offense, 'TOV%')))]
defense_to_steal = [(100 - float(player_stat_ripper(defense, 'STL%'))), (float(player_stat_ripper(defense, 'STL%')))]
>>>>>>> 92d37aa37535db2b87c357280a60244763eb7bd7
defense_to_block = '' #not calculated yet
defense_to_rebound = '' #see above
offense_to_score = '' #see above
offense_to_orebound = '' #see above

<<<<<<< HEAD
=======
#test print
print offense_to_take_shot
print defense_to_steal

>>>>>>> 92d37aa37535db2b87c357280a60244763eb7bd7
#weighted probability roller
def encounterweights(weights):
    totals = []
    running_total = 0

    for w in weights:
        running_total += w
        totals.append(running_total)

    rnd = random.random() * running_total
    for i, total in enumerate(totals):
        if rnd < total:
            return i
        
<<<<<<< HEAD
#redefine these functions into a class
def stamina_comp_check(ostamina, dstamina):
    if ostamina > dstamina:
        return offense_name
    else:
        return defense_name

def speed_comp_check(ospeed, dspeed):
    if ospeed > dspeed:
        return offense_name
    else:
        return defense_name

######################################
# fail or success checks - merge these functions
######################################

def off_fail_long(defcheck):
    if encounterweights(defcheck) == 0:
        return stamina_comp_check(offense_stamina, defense_stamina)
    else:
        return defense_name


def off_suc_long(offcheck):
    if encounterweights(offcheck) == 0: 
        return offense_name
    else:
        return speed_comp_check(offense_speed, defense_speed) # 


####################################
#long range shot; 3 pt shot
def offense_long_range(offense, defense):
    if encounterweights(offense) == 0: #
        return off_fail_long(defense)
    else:
        return off_suc_long(defense)
    
#mid range shot; from 10ft to <3 point shot
#def offense_mid_range(offense, defense):
 #   if encounterweights(offense) == 0: # not written yet
  #      return offfail(defense)
   # else:
    #    return offsuccede(defense) 

#close range shot; from DUNK/layup to 10ft
#def offense_close_range(offense, defense):
 #   if encounterweights(offense) == 0: # not written yet
  #      return offfail(defense)
   # else:
    #    return offsuccede(defense) 
     
#testing output
    
i = 0

while i < 100:
    print offense_long_range(offense_to_take_shot, defense_to_steal)
    i += 1
=======
##define these functions under class for LONG SHOT ATTEMPT / 3pt shot attempt
def stamina_comp(offense_stamina, defense_stamina):
    if offense_stamina > defense_stamina:
        return offense
    else:
        return defense

def speed_comp(offense_speed, defense_speed):
    if offense_speed > defense_speed:
        return offense
    else:
        return defense

#####    
def off_fail(check_opponent):
    if encounterweights(check_opponent) == 0:
        return stamina_comp(user_profile['stamina'], opponent_profile['stamina'])
    else:
        return defense

def off_succede(check_opponent):
    if encounterweights(check_opponent) == 0: 
        return offense
    else:
        return speed_comp(user_profile['speed'], opponent_profile['speed'])  

#########  encounter for initiating offense moves / 3pt shot
def encounter(offensive_player, defensive_player):
    if encounterweights(offensive_player) == 0: 
        return off_fail(defensive_player)
    else:
        return off_succede(defensive_player) 
 
     
#output; testing percentages the hard way
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
print encounter(offense_to_take_shot, defense_to_steal)
raw_input()
>>>>>>> 92d37aa37535db2b87c357280a60244763eb7bd7
