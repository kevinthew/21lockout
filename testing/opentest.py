import random

#variables
klove = 'YES'
kdurant = 'NO'
#testetstest
#feed = [klove, OFF, klovespeed, klovestamina]

#weighted probabilities; right now they're both 50-50 for testing
OFF = [9, 91]   #9% v. 91% Kevin Love's To% (have it read this off a spreadsheet/csv) -- 9% chance of TURNING ball over    
DEF = [95, 5] #98.1% v. 1.9% Kevin Durant's likelihood to steal -- 98.1% chance of NOT stealing

#player speed stat
klovespeed = 7
kdurantspeed = 8

#player stamina stat
klovestamina = 20
kdurantstamina = 21


#test functions/classes
#class player_stats(player_inputs)

    #def csvscrape(

#functions
def encounterweights(weights):
    totals = []
    running_total = 0

    for w in weights:
        running_total += w
        totals.append(running_total)

    rnd = random.random() * running_total
    for i, total in enumerate(totals):
        if rnd < total:
            return i
###
def staminacomp(ostamina, dstamina):
    if ostamina > dstamina:
        return klove
    else:
        return kdurant

def speedcomp(ospeed, dspeed):
    if ospeed > dspeed:
        return klove
    else:
        return kdurant

#####    
def offfail(defcheck):
    if encounterweights(defcheck) == 0:
        return staminacomp(klovestamina, kdurantstamina)
    else:
        return kdurant

def offsuccede(offcheck):
    if encounterweights(offcheck) == 0: 
        return klove
    else:
        return speedcomp(klovespeed, kdurantspeed) #will happen 1.9% of time; 1.9 + 9 = 10.9 ~11. 

#########    
def encounter(offense, defense):
    if encounterweights(offense) == 0: #9% chance of 0 here; since durant's stamina is higher, if a fail here, insta turnover
        return offfail(defense)
    else:
        return offsuccede(defense) #91% chance of this happening; if it happens, contingent odds added to 9% above -- 1.9% chance of stealing basically
 
            #basically, with this example, there is 9% flat chance of durant succeeding because there is no resistance + the odds from the second contingency;
            # -- that is, the odds of DURANT STEALING + ODDS OF KLOVE FAILING; that is ODDS OF TURNOVER
            # now, if klove's stats are both higher, instead of kdurants both being higher -- you see 1-2% odds, which is basically kdurant's odds of stealing
            # irrespective of klove failing

     
#output
print encounter(OFF, DEF)
